resources:
- repo: self

jobs:
- job: RunTestSP2013
  condition: eq(variables['Test.ProvisionSharePoint2013'], 'yes')
  displayName: Run tests on SP2013
  timeoutInMinutes: 15
  variables:
    jobSharePointVersion: 2013
  pool:
    name: $(System.TeamProject)-Tests-2013
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      buildType: specific
      project: '$(System.TeamProjectId)'
      pipeline: $(Test.BuildArtifactsPipelineID)
      specificBuildWithTriggering: true
      artifactName: drop
      downloadPath: $(Build.ArtifactStagingDirectory)
      itemPattern: |
       drop/$(System.TeamProject).Tests/bin/Release/*.dll
       drop/SPTestServer artifacts/?(*.csv|*.json)

  - task: VisualStudioTestPlatformInstaller@1
    displayName: 'Visual Studio Test Platform Installer'

  - task: VSTest@2
    displayName: 'Run Visual Studio tests'
    inputs:
      searchFolder: '$(System.ArtifactsDirectory)\drop'
      vsTestVersion: toolsInstaller
      runSettingsFile: $(System.TeamProject).Tests/local.runsettings
      overrideTestrunParameters: '-DataFile_AllAccounts_Search "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_AllAccounts_Search.csv" -DataFile_AllAccounts_Validate "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_AllAccounts_Validate.csv" -DataFile_GuestAccountsUPN_Search "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_GuestAccountsUPN_Search.csv" -DataFile_GuestAccountsUPN_Validate "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_GuestAccountsUPN_Validate.csv" -TestSiteCollectionName "$(System.TeamProject).$(Build.BuildNumber)" -AzureTenantsJsonFile "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\AzureCP_Tenants.json"'
      codeCoverageEnabled: false
      otherConsoleOptions: '/Platform:x64'
      testRunTitle: '$(System.TeamProject)-Tests-SP$(jobSharePointVersion)'
      platform: '$(BuildPlatform)'
      configuration: $(BuildConfiguration)

- job: RunTestSP2016
  condition: eq(variables['Test.ProvisionSharePoint2016'], 'yes')
  displayName: Run tests on SP2016
  timeoutInMinutes: 15
  variables:
    jobSharePointVersion: 2016
  pool:
    name: $(System.TeamProject)-Tests-2016
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      buildType: specific
      project: '$(System.TeamProjectId)'
      pipeline: $(Test.BuildArtifactsPipelineID)
      specificBuildWithTriggering: true
      artifactName: drop
      downloadPath: $(Build.ArtifactStagingDirectory)
      itemPattern: |
       drop/$(System.TeamProject).Tests/bin/Release/*.dll
       drop/SPTestServer artifacts/?(*.csv|*.json)

  - task: VisualStudioTestPlatformInstaller@1
    displayName: 'Visual Studio Test Platform Installer'

  - task: VSTest@2
    displayName: 'Run Visual Studio tests'
    inputs:
      searchFolder: '$(System.ArtifactsDirectory)\drop'
      vsTestVersion: toolsInstaller
      runSettingsFile: $(System.TeamProject).Tests/local.runsettings
      overrideTestrunParameters: '-DataFile_AllAccounts_Search "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_AllAccounts_Search.csv" -DataFile_AllAccounts_Validate "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_AllAccounts_Validate.csv" -DataFile_GuestAccountsUPN_Search "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_GuestAccountsUPN_Search.csv" -DataFile_GuestAccountsUPN_Validate "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_GuestAccountsUPN_Validate.csv" -TestSiteCollectionName "$(System.TeamProject).$(Build.BuildNumber)" -AzureTenantsJsonFile "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\AzureCP_Tenants.json"'
      codeCoverageEnabled: false
      otherConsoleOptions: '/Platform:x64'
      testRunTitle: '$(System.TeamProject)-Tests-SP$(jobSharePointVersion)'
      platform: '$(BuildPlatform)'
      configuration: $(BuildConfiguration)

- job: RunTestSP2019
  condition: eq(variables['Test.ProvisionSharePoint2019'], 'yes')
  displayName: Run tests on SP2019
  timeoutInMinutes: 15
  variables:
    jobSharePointVersion: 2019
  pool:
    name: $(System.TeamProject)-Tests-2019
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      buildType: specific
      project: '$(System.TeamProjectId)'
      pipeline: $(Test.BuildArtifactsPipelineID)
      specificBuildWithTriggering: true
      artifactName: drop
      downloadPath: $(Build.ArtifactStagingDirectory)
      itemPattern: |
       drop/$(System.TeamProject).Tests/bin/Release/*.dll
       drop/SPTestServer artifacts/?(*.csv|*.json)

  - task: VisualStudioTestPlatformInstaller@1
    displayName: 'Visual Studio Test Platform Installer'

  - task: VSTest@2
    displayName: 'Run Visual Studio tests'
    inputs:
      searchFolder: '$(System.ArtifactsDirectory)\drop'
      vsTestVersion: toolsInstaller
      runSettingsFile: $(System.TeamProject).Tests/local.runsettings
      overrideTestrunParameters: '-DataFile_AllAccounts_Search "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_AllAccounts_Search.csv" -DataFile_AllAccounts_Validate "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_AllAccounts_Validate.csv" -DataFile_GuestAccountsUPN_Search "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_GuestAccountsUPN_Search.csv" -DataFile_GuestAccountsUPN_Validate "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\$(System.TeamProject)_Tests_GuestAccountsUPN_Validate.csv" -TestSiteCollectionName "$(System.TeamProject).$(Build.BuildNumber)" -AzureTenantsJsonFile "$(System.ArtifactsDirectory)\drop\SPTestServer artifacts\AzureCP_Tenants.json"'
      codeCoverageEnabled: false
      otherConsoleOptions: '/Platform:x64'
      testRunTitle: '$(System.TeamProject)-Tests-SP$(jobSharePointVersion)'
      platform: '$(BuildPlatform)'
      configuration: $(BuildConfiguration)
